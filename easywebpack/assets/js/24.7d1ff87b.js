(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{179:function(a,e,s){"use strict";s.r(e);var t=s(0),c=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"构建模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建模式"}},[a._v("#")]),a._v(" 构建模式")]),a._v(" "),s("p",[s("strong",[a._v("easywebpack-cli 支持两种开发构建模式： easywebpack 增强模式 和 原生 webpack 模式， 同时在最新相关解决方案中，该文件非必须，也就是可以零配置。")])]),a._v(" "),s("h3",{attrs:{id:"easywebpack-增强模式（默认）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#easywebpack-增强模式（默认）"}},[a._v("#")]),a._v(" easywebpack 增强模式（默认）")]),a._v(" "),s("p",{staticStyle:{"padding-left":"2em"}},[a._v("easywebpack 增强模式时，  "),s("code",[a._v("webpack.config.js")]),a._v(" 这份配置"),s("span",{staticStyle:{color:"#1890FF"}},[a._v("不是 Webpack 原生的配置文件, 这是专门给 ")]),s("span",{staticStyle:{color:"#1890FF"}},[a._v("easywebpack-cli")]),s("code"),s("span",{staticStyle:{color:"#1890FF"}},[a._v(" 使用的配置文件")]),a._v(".  这份配置简化了 Webpack 原生配置, 隐藏众多基础，loader, plugin 等细节, 只提供5个左右的基本配置项, 其中 loader, plugin 通过开关开启就可以使用其功能.  在构建时, "),s("code",[a._v("easywebpack-cli")]),a._v(" 最终会这份简化的配置转换为 Webpack 原生配置.  "),s("span",{staticStyle:{color:"#1890FF"}},[a._v("当然 easywebpack 增强模式是兼容原生 Webpack 配置项")]),a._v("，比如 entry, target, node, resolve, externals, module.noParse, module.alias, module.rules, devtool, performance等配置项。"),s("span",{staticStyle:{color:"#2F54EB"}},[a._v("相关文档所讲都是基于 ")]),s("strong",[s("span",{staticStyle:{color:"#2F54EB"}},[a._v("easywebpack 增强模式。")])])]),a._v(" "),s("h4",{attrs:{id:"开发模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发模式"}},[a._v("#")]),a._v(" 开发模式")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("easy dev \n")])])]),s("h4",{attrs:{id:"编译模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译模式"}},[a._v("#")]),a._v(" 编译模式")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("easy build \n")])])]),s("h3",{attrs:{id:"原生-webpack-模式-（easywebpack-cli-4-0-0-开始支持）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原生-webpack-模式-（easywebpack-cli-4-0-0-开始支持）"}},[a._v("#")]),a._v(" 原生 webpack 模式 （easywebpack-cli@4.0.0 开始支持）")]),a._v(" "),s("p",[a._v("你可以使用 "),s("code",[a._v("easywebpack-cli")]),a._v("  对"),s("strong",[s("span",{staticStyle:{color:"#1890FF"}},[a._v("原生 Webpack 配置")])]),a._v("进行构建,  这时候，你需要在 "),s("code",[a._v("easy")]),a._v("  命令后加上 "),s("code",[a._v("--webpack")]),a._v(" 配置")]),a._v(" "),s("h4",{attrs:{id:"原生-webpack-开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原生-webpack-开发"}},[a._v("#")]),a._v(" 原生 webpack 开发")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("easy dev --webpack \n")])])]),s("h4",{attrs:{id:"本地原生-webpack-编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地原生-webpack-编译"}},[a._v("#")]),a._v(" 本地原生 webpack 编译")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("easy build --webpack \n")])])]),s("p",[a._v("更多命令使用，请见 "),s("a",{attrs:{href:"https://github.com/hubcarl/easywebpack-cli",target:"_blank"}},[a._v("easywebpack-cli")])])])}),[],!1,null,null,null);e.default=c.exports}}]);